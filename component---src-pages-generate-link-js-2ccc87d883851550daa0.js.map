{"version":3,"sources":["webpack:///./src/hooks/useGuestData.js","webpack:///./src/components/GenerateLink/index.js","webpack:///./src/components/GenerateLink/styles.js","webpack:///./src/pages/generate-link.js"],"names":["useGuestData","useState","loading","setLoading","data","setData","handleFetch","a","offlineGuestData","console","error","useEffect","refetch","HOSTNAME","GenerateLink","type","setType","name","setName","showResult","setShowResult","successCopy","setSuccessCopy","URL","encodeURIComponent","handleSetName","e","target","value","handleCopy","text","showAlert","navigator","clipboard","writeText","alert","className","style","textAlign","class","for","onChange","parseInt","placeholder","backgroundColor","border","color","onClick","role","marginTop","href","rel","textDecoration","marginLeft","map","d","index","mapURL","preventDefault","fontSize","padding","styWrapper","GenerateLinkWrapper","css"],"mappings":"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","file":"component---src-pages-generate-link-js-2ccc87d883851550daa0.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport offlineGuestData from '../../api/guest-data.json';\n\nfunction useGuestData() {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  const handleFetch = async () => {\n    setLoading(true);\n\n    try {\n      setData(offlineGuestData || []);\n      setLoading(false);\n    } catch {\n      console.error('ERR_WHEN_HIT_DATA');\n      setData([]);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    handleFetch();\n  }, []);\n\n  return { data, loading, refetch: handleFetch };\n}\n\nexport default useGuestData;\n","import React, { useState, Fragment } from 'react';\nimport useGuestData from '@/hooks/useGuestData';\n\nconst PERSONAL = 1;\nconst ALL = 2;\nconst HOSTNAME = 'https://invitato.net/wedding-annas-pelangi';\n\nfunction GenerateLink() {\n  const [type, setType] = useState(PERSONAL);\n  const [name, setName] = useState();\n  const [showResult, setShowResult] = useState(false);\n  const [successCopy, setSuccessCopy] = useState(false);\n\n  const { data, loading } = useGuestData();\n\n  const URL = `${HOSTNAME}?to=${encodeURIComponent(name)}`;\n\n  const handleChange = (e) => {\n    setType(parseInt(e.target.value, 10));\n    setShowResult(false);\n  };\n\n  const handleSetName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleCopy = async (text, showAlert = false) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setSuccessCopy(true);\n      showAlert && alert('URL Berhasil disalin di clipboard');\n    } catch (err) {\n      setSuccessCopy(false);\n      alert('Failed to copy! :(');\n    }\n  };\n\n  const renderContentType = () => {\n    if (type === PERSONAL) {\n      return (\n        <Fragment>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nama Tamu</label>\n            <input\n              value={name}\n              onChange={handleSetName}\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Nama tamu..\"\n            ></input>\n          </div>\n          <button\n            type=\"submit\"\n            class=\"btn\"\n            style={{ backgroundColor: 'var(--font-primary)', border: 'none', color: 'white' }}\n            onClick={() => setShowResult(true)}\n          >\n            Generate Link\n          </button>\n        </Fragment>\n      );\n    }\n\n    if (type === ALL) {\n      return (\n        <Fragment>\n          <button\n            type=\"submit\"\n            class=\"btn\"\n            style={{ backgroundColor: 'var(--font-primary)', border: 'none', color: 'white' }}\n            onClick={() => setShowResult(true)}\n          >\n            Generate Link\n          </button>\n        </Fragment>\n      );\n    }\n  };\n\n  const renderResult = () => {\n    if (!showResult) return null;\n\n    if (type === PERSONAL) {\n      return (\n        <div className=\"col-md-4 col-md-offset-4\">\n          <div class=\"alert alert-success\" role=\"alert\" style={{ marginTop: '20px' }}>\n            <strong>Berhasil!</strong> <br />\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\" style={{ color: 'green', textDecoration: 'underline' }}>\n              {URL}\n            </a>\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-xs\"\n              style={{ marginLeft: '8px' }}\n              onClick={() => handleCopy(URL)}\n            >\n              {successCopy ? 'Tersalin' : 'Salin'}\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    if (type === ALL) {\n      return (\n        <div className=\"col-md-10 col-md-offset-1\" style={{ marginTop: '28px' }}>\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>Nama</th>\n                  <th>Link</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((d, index) => {\n                  const offlineInvitation = '';\n                  const mapURL = `${HOSTNAME}?to=${encodeURIComponent(d.name)}${offlineInvitation}`;\n                  return (\n                    <tr>\n                      <td>{d.name}</td>\n                      <td>\n                        <a\n                          href={mapURL}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                          style={{ textDecoration: 'underline' }}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            handleCopy(mapURL, true);\n                          }}\n                        >\n                          {mapURL}\n                        </a>\n                        <button\n                          className=\"btn btn-default btn-sm\"\n                          style={{\n                            fontSize: '12px',\n                            padding: '4px 8px',\n                            marginLeft: '4px',\n                          }}\n                          onClick={() => handleCopy(mapURL, true)}\n                        >\n                          copy\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"title\">Generator of Link Invitation</h2>\n      <h3 className=\"title__sub\">Annas & Pelangi</h3>\n\n      {loading && <h4 style={{ textAlign: 'center' }}>Memuat data..</h4>}\n\n      {!loading && (\n        <Fragment>\n          <div className=\"row\">\n            <div className=\"col-md-4 col-md-offset-4\">\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">Tipe Link</label>\n                <select class=\"form-control\" value={type} onChange={handleChange}>\n                  <option value={PERSONAL}>Individu</option>\n                  <option value={ALL}>Semua Undangan</option>\n                </select>\n              </div>\n              {renderContentType()}\n            </div>\n          </div>\n          <div className=\"row\">{renderResult()}</div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default GenerateLink;\n","import { css } from '@emotion/core';\n\nexport const styWrapper = css`\n  padding: 24px 8px 8px 8px;\n\n  .title {\n    text-align: center;\n  }\n\n  .title__sub {\n    text-align: center;\n    font-family: 'Cookie', cursive;\n    font-size: 3em;\n  }\n`;\n","import React from 'react';\n\nimport MainLayout from '@components/Layout';\nimport GenerateLink from '@components/GenerateLink';\nimport { styWrapper } from '@components/GenerateLink/styles';\n\nfunction GenerateLinkWrapper() {\n  return (\n    <MainLayout>\n      <div css={styWrapper}>{<GenerateLink />}</div>\n    </MainLayout>\n  );\n}\n\nexport default GenerateLinkWrapper;\n"],"sourceRoot":""}